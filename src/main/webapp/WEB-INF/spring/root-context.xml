<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/spring/jdbc.properties" />
   
   <!-- Data Sourse -->
    <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property> 
       <!--  Hibernate 3
       <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property> -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
    
     <!-- 数据校验配置 --> 
    <!--  <mvc:annotation-driven validator="validator" conversion-service="conversion-service" />  -->
   
 <bean id= "validator" class= "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name= "providerClass"  value= "org.hibernate.validator.HibernateValidator"/>
       <!--  如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name= "validationMessageSource" ref= "validatemessageSource"/>
</bean> 
<bean id= "webBindingInitializer"
class= "org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
    <property name= "conversionService" ref= "conversion-service"/>
    <property name= "validator" ref= "validator"/>
</bean>
 <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
<bean id= "validatemessageSource" class= "org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name= "basename" value= "classpath:validatemessages.properties"/>
        <property name= "fileEncodings" value= "utf-8"/>
        <property name= "cacheSeconds" value= "120"/>
</bean> 
		<!-- filter的id是在web.xml中配置的那个 -->  
    <bean  id="myFilter" class="com.swu.question.filter.MyFilter"/>   
</beans>
